<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mt.base.service.authentication.mapper.AuthMapper">
    <resultMap type="com.mt.base.service.authentication.entity.User" id="UserMap">
        <result property="id"    column="id"    />
        <result property="username"    column="username"    />
        <result property="password"    column="password"    />
        <result property="avatar"    column="avatar"    />
        <result property="email"    column="email"    />
        <result property="phone"    column="phone"    />
        <result property="nickname"    column="nickname"    />
        <result property="gender"    column="gender"    />
        <result property="createTime"    column="createTime"    />
        <result property="updateTime"    column="updateTime"    />
        <result property="status"    column="status"    />
        <collection property="roles" ofType="com.mt.base.service.authentication.entity.Role">
            <id column="role_id" property="id" />
            <result column="role_name" property="name" />
            <result column="role_remark" property="remark" />
            <result column="role_level" property="level" />
            <result column="role_create_time" property="createTime" />
            <result column="role_update_time" property="updateTime" />
            <result column="role_status" property="status" />
        </collection>
    </resultMap>

    <sql id="selectUser">
        select id, username, password, avatar, email, phone, nickname, gender, create_time, update_time, status from auth_user
    </sql>

    <select id="checkUserExists" resultType="java.lang.Boolean" parameterType="java.lang.String">
        select COUNT(id) > 0 from auth_user where username = #{username}
    </select>

    <select id="findByUsername" resultMap="UserMap" parameterType="java.lang.String">
        select u.id id, u.username username, u.password password, u.avatar avatar, u.email email, u.phone phone, u.nickname nickname, u.gender gender, u.create_time create_time, u.update_time update_time, u.status status, r.id role_id, r.name role_name, r.level role_level, r.remark role_remark, r.create_time role_create_time, r.update_time role_update_time, r.status role_status from auth_user u
        left join auth_user_role ur on ur.user_id = u.id
        left join auth_role r on r.id = ur.role_id
        where u.username = #{username}
    </select>

    <delete id="deleteByUsername" parameterType="java.lang.String">
        delete from auth_user where username=#{username}
    </delete>
</mapper>